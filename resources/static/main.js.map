{"version":3,"sources":["./src/environments/environment.ts","./src/app/tasks/tasks-list/tasks-list.component.ts","./src/app/tasks/tasks-list/tasks-list.component.html","./src/app/tasks/task.model.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/tasks/tasks-add/tasks-add.component.ts","./src/app/tasks/tasks-add/tasks-add.component.html","./src/app/tasks/task.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Task} from \"../task.model\";\nimport {TaskService} from \"../task.service\";\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css']\n})\nexport class TasksListComponent implements OnInit {\n\n    tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit()  {\n      this.loadTasks();\n  }\n\n    loadTasks() {\n        this.taskService.getTasks().then((response) => {\n            console.log(response);\n            this.tasks = JSON.parse(JSON.stringify(response)); //if you server returns json data\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        this.taskService.onTaskAdded.subscribe(\n            (task: Task) => this.tasks.push(task)\n            );\n\n    }\n\n  getDueDateLabel(task:Task) {\n      return task.completed ? 'badge-success' : 'badge-danger';\n  }\n\n  onTaskChange(event, task) {\n      this.taskService.saveTask(task, event.target.checked).subscribe();\n\n  }\n\n}\n","<ul class=\"list-group\">\n    <li *ngFor=\"let task of tasks\" class=\"list-group-item\">\n        <div class=\"task-checkbox\">\n            <input type=\"checkbox\"\n            class=\"list-child\"\n            (change)=\"onTaskChange($event,task)\"\n            [checked]=\"task.completed\">\n            <span ngClass=\"{{task.completed ? 'name completed' : 'name'}}\">{{ task.name }}</span>\n            <span class=\"badge {{ getDueDateLabel(task) }} float-right \">{{ task.dueDate }}</span>\n        </div>\n    </li>\n</ul>\n","export class Task {\r\n    public id: number;\r\n    public name: string;\r\n    public completed: boolean;\r\n    public dueDate: string;\r\n\r\n    constructor(name: string, completed: boolean, dueDate: string) {\r\n        this.name = name;\r\n        this.completed = completed;\r\n        this.dueDate = dueDate;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-2\">&nbsp;</div>\n    <div class=\"col-md-8\">\n        <div id=\"tasksPanel\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n                <h2 class=\"panel-title\">My Tasks</h2>\n            </div>\n            <div class=\"panel-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <app-tasks-add></app-tasks-add>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <app-tasks-list></app-tasks-list>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {TaskService} from \"src/app/tasks/task.service\";\nimport {Task}       from \"src/app/tasks/task.model\";\n\n@Component({\n  selector: 'app-tasks-add',\n  templateUrl: './tasks-add.component.html',\n  styleUrls: ['./tasks-add.component.css']\n})\nexport class TasksAddComponent implements OnInit {\n\n    addTaskValue: string = null;\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n  }\n\n  onTaskAdd(event) {\n    let task: Task = new Task(event.target.value,false,this.getTodayAsString());\n    this.taskService.addTask(task)\n        .subscribe(\n            (newTask: Task) => {\n                //clear input\n                this.addTaskValue = ' ';\n                this.taskService.onTaskAdded.emit(newTask);\n            }\n        )\n  }\n\n  getTodayAsString() {\n    let today = new Date();\n    let dd: any = today.getDate();\n    let mm: any = today.getMonth() +1;\n    let yyyy: any = today.getFullYear();\n\n    if(dd < 10) {\n        dd = '0' + dd;\n    }\n\n    if(mm < 10) {\n        mm = '0' + mm\n    }\n\n    return mm + '/' + dd + '/' + yyyy;\n  }\n\n}\n","<div class=\"form-group\">\n    <input type=\"text\"\n           class=\"form-control\"\n           placeholder=\"Add New Task\"\n            (keyup.enter)=\"onTaskAdd($event)\"\n            ([ngModel])=\"addTaskValue\"/>\n</div>\n","import {HttpClient} from \"@angular/common/http\";\r\nimport {Injectable, EventEmitter} from \"@angular/core\";\r\nimport {Task}       from \"src/app/tasks/task.model\";\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n    onTaskAdded = new EventEmitter<Task>();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getTasks() {\r\n        return this.http.get('/api/tasks').toPromise();\r\n    }\r\n\r\n    saveTask(task: Task, checked: boolean) {\r\n        task.completed = checked;\r\n        return this.http.post('/api/tasks/save', task)\r\n            .pipe(response => response);\r\n    }\r\n\r\n    addTask(task: Task) {\r\n        return this.http.post('/api/tasks/save', task)\r\n            .pipe(response => response);\r\n             }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<div class=\"container\">\n    <app-tasks></app-tasks>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TasksAddComponent } from './tasks/tasks-add/tasks-add.component';\nimport { TasksListComponent } from './tasks/tasks-list/tasks-list.component';\nimport { TaskService } from \"./tasks/task.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TasksAddComponent,\n    TasksListComponent\n  ],\n  imports: [\n    BrowserModule,\n      HttpClientModule\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}